import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  Pressable,
  Alert,
  ScrollView,
} from 'react-native';
import { useWalletStore } from '../store/walletStore';

export default function SettingsScreen({ navigation }: any) {
  const { clearWallet, publicKey, balance } = useWalletStore();

  const handleShowRecoveryPhrase = () => {
    navigation.navigate('BackupScreen');
  };

  const handleClearWallet = () => {
    Alert.alert(
      'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—à–µ–ª–µ–∫',
      '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ—à–µ–ª–µ–∫? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã –Ω–∞–≤—Å–µ–≥–¥–∞!',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        {
          text: '–£–¥–∞–ª–∏—Ç—å',
          style: 'destructive',
          onPress: async () => {
            await clearWallet();
            navigation.navigate('Onboarding');
          },
        },
      ]
    );
  };

  const handleAbout = () => {
    Alert.alert(
      '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
      'CryptoNow v1.0.0\n\nSolana –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–µ—Ç–∏ Devnet\n\n¬© 2024 ZapZapDev',
      [{ text: 'OK' }]
    );
  };

  return (
    <ScrollView style={styles.container}>
      <View style={styles.header}>
        <Pressable onPress={() => navigation.goBack()} style={styles.backButton}>
          <Text style={styles.backText}>‚Üê –ù–∞–∑–∞–¥</Text>
        </Pressable>
        <Text style={styles.title}>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</Text>
      </View>

      <View style={styles.walletInfo}>
        <Text style={styles.sectionTitle}>üíº –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ</Text>
        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>–ê–¥—Ä–µ—Å:</Text>
          <Text style={styles.infoValue}>
            {publicKey ? `${publicKey.slice(0, 8)}...${publicKey.slice(-8)}` : '–ù–µ—Ç'}
          </Text>
        </View>
        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>–ë–∞–ª–∞–Ω—Å:</Text>
          <Text style={styles.infoValue}>{balance.toFixed(4)} SOL</Text>
        </View>
        <View style={styles.infoRow}>
          <Text style={styles.infoLabel}>–°–µ—Ç—å:</Text>
          <Text style={[styles.infoValue, { color: '#00ff88' }]}>Devnet</Text>
        </View>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</Text>
        <Pressable style={styles.settingItem} onPress={handleShowRecoveryPhrase}>
          <Text style={styles.settingEmoji}>üîë</Text>
          <View style={styles.settingContent}>
            <Text style={styles.settingText}>–§—Ä–∞–∑–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è</Text>
            <Text style={styles.settingDescription}>
              –ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—Ä–∞–∑—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
            </Text>
          </View>
          <Text style={styles.arrow}>‚Ä∫</Text>
        </Pressable>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</Text>
        <Pressable
          style={styles.settingItem}
          onPress={() => navigation.navigate('Dashboard')}
        >
          <Text style={styles.settingEmoji}>üéÅ</Text>
          <View style={styles.settingContent}>
            <Text style={styles.settingText}>–ó–∞–ø—Ä–æ—Å–∏—Ç—å Airdrop</Text>
            <Text style={styles.settingDescription}>
              –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ SOL
            </Text>
          </View>
          <Text style={styles.arrow}>‚Ä∫</Text>
        </Pressable>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Text>
        <Pressable style={styles.settingItem} onPress={handleAbout}>
          <Text style={styles.settingEmoji}>üì±</Text>
          <View style={styles.settingContent}>
            <Text style={styles.settingText}>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</Text>
            <Text style={styles.settingDescription}>
              –í–µ—Ä—Å–∏—è, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ª–∏—Ü–µ–Ω–∑–∏—è
            </Text>
          </View>
          <Text style={styles.arrow}>‚Ä∫</Text>
        </Pressable>
      </View>

      <View style={styles.dangerSection}>
        <Text style={styles.dangerTitle}>‚ö†Ô∏è –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</Text>
        <Pressable style={styles.dangerItem} onPress={handleClearWallet}>
          <Text style={styles.settingEmoji}>üóëÔ∏è</Text>
          <View style={styles.settingContent}>
            <Text style={[styles.settingText, { color: '#ff4757' }]}>
              –£–¥–∞–ª–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
            </Text>
            <Text style={styles.settingDescription}>
              –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∞
            </Text>
          </View>
          <Text style={styles.arrow}>‚Ä∫</Text>
        </Pressable>
      </View>
    </ScrollView>
  );
}

const settingsStyles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#0f0f23',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 24,
    paddingTop: 60,
    paddingBottom: 20,
  },
  backButton: {
    marginRight: 16,
  },
  backText: {
    fontSize: 16,
    color: '#00ff88',
    fontWeight: '600',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#ccd6f6',
    flex: 1,
  },
  walletInfo: {
    backgroundColor: '#1a1a3a',
    marginHorizontal: 24,
    marginBottom: 24,
    padding: 20,
    borderRadius: 16,
    borderWidth: 1,
    borderColor: '#2d2d5a',
  },
  sectionTitle: {
    fontSize: 18,
    color: '#ccd6f6',
    fontWeight: 'bold',
    marginBottom: 16,
  },
  infoRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 8,
  },
  infoLabel: {
    fontSize: 14,
    color: '#8892b0',
  },
  infoValue: {
    fontSize: 14,
    color: '#ccd6f6',
    fontWeight: '600',
    fontFamily: 'monospace',
  },
  section: {
    backgroundColor: '#1a1a3a',
    marginHorizontal: 24,
    marginBottom: 16,
    borderRadius: 16,
    borderWidth: 1,
    borderColor: '#2d2d5a',
    overflow: 'hidden',
  },
  settingItem: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#2d2d5a',
  },
  settingEmoji: {
    fontSize: 20,
    marginRight: 16,
  },
  settingContent: {
    flex: 1,
  },
  settingText: {
    fontSize: 16,
    color: '#ccd6f6',
    fontWeight: '600',
    marginBottom: 4,
  },
  settingDescription: {
    fontSize: 12,
    color: '#8892b0',
  },
  arrow: {
    fontSize: 18,
    color: '#8892b0',
  },
  dangerSection: {
    backgroundColor: '#2d1b1b',
    marginHorizontal: 24,
    marginBottom: 40,
    borderRadius: 16,
    borderWidth: 1,
    borderColor: '#5a2d2d',
    overflow: 'hidden',
  },
  dangerTitle: {
    fontSize: 18,
    color: '#ff9999',
    fontWeight: 'bold',
    padding: 20,
    paddingBottom: 0,
  },
  dangerItem: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 20,
  },
});